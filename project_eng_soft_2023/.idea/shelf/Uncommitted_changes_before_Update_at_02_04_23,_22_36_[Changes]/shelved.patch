Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"034cdcf1-ec4b-4d58-9464-e777f20796fa\" name=\"Changes\" comment=\"Board update\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/controller/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/ControlPlayer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/ControlPlayer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/Game.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/controller/PlayerStatus.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/controller/PlayerStatus.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/Board.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/model/DeckCards.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/model/DeckCards.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"JUnit5 Test Class\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2N5zc7ZawszFy8J660izbL2GoKK\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mirko/Desktop/poli/anno_III/IdS/progetto_IdS/javaCode/Local_IS23-AM05/project_eng_soft_2023_local&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"model\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"JUnit.BoardTest\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.Main\" />\n      <module name=\"project_eng_soft_2023\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"controller.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"App test\" type=\"JUnit\" factoryName=\"JUnit\">\n      <module name=\"project_eng_soft_2023\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"\" />\n      <option name=\"METHOD_NAME\" value=\"\" />\n      <option name=\"TEST_OBJECT\" value=\"category\" />\n      <category value=\"org.example.AppTest\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"BoardTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"project_eng_soft_2023\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"model.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"model\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"model.BoardTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"BoardTest.testOkTiles\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"project_eng_soft_2023\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"model.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"model\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"model.BoardTest\" />\n      <option name=\"METHOD_NAME\" value=\"testOkTiles\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"DeckCardsTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"project_eng_soft_2023\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"model.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"model\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"model.DeckCardsTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.Main\" />\n      <item itemvalue=\"JUnit.App test\" />\n      <item itemvalue=\"JUnit.BoardTest.testOkTiles\" />\n      <item itemvalue=\"JUnit.DeckCardsTest\" />\n      <item itemvalue=\"JUnit.BoardTest\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.BoardTest\" />\n        <item itemvalue=\"JUnit.DeckCardsTest\" />\n        <item itemvalue=\"JUnit.BoardTest.testOkTiles\" />\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"034cdcf1-ec4b-4d58-9464-e777f20796fa\" name=\"Changes\" comment=\"\" />\n      <created>1678968809288</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1678968809288</updated>\n      <workItem from=\"1678968812445\" duration=\"1191000\" />\n      <workItem from=\"1678995660861\" duration=\"680000\" />\n      <workItem from=\"1679147271673\" duration=\"10855000\" />\n      <workItem from=\"1679162248157\" duration=\"23000\" />\n      <workItem from=\"1679318938631\" duration=\"2222000\" />\n      <workItem from=\"1679401956191\" duration=\"597000\" />\n      <workItem from=\"1679402711774\" duration=\"318000\" />\n      <workItem from=\"1679404582493\" duration=\"225000\" />\n      <workItem from=\"1679405054232\" duration=\"301000\" />\n      <workItem from=\"1679421122061\" duration=\"2144000\" />\n      <workItem from=\"1679429159090\" duration=\"5089000\" />\n      <workItem from=\"1679471720159\" duration=\"2533000\" />\n      <workItem from=\"1680120955743\" duration=\"2377000\" />\n      <workItem from=\"1680184224372\" duration=\"27000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Correzione metodi EOGToken\">\n      <created>1679347133576</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679347133576</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"tested all 12 CGC and fixed some bugs\">\n      <created>1679944507245</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679944507245</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Board update\">\n      <created>1680361572628</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1680361572628</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"Correzione metodi EOGToken\" />\n    <MESSAGE value=\"tested all 12 CGC and fixed some bugs\" />\n    <MESSAGE value=\"Board update\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Board update\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>\n          <line>282</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>\n          <line>294</line>\n          <option name=\"timeStamp\" value=\"3\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>\n          <line>120</line>\n          <properties class=\"model.Bookshelf\" method=\"getBookshelf\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"6\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>\n          <line>303</line>\n          <properties class=\"model.Bookshelf\" method=\"getScoreCGC\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"7\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b6dc2652cb330269a7abc985478278bab3ec60d9)
+++ b/.idea/workspace.xml	(date 1680467791096)
@@ -5,13 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="034cdcf1-ec4b-4d58-9464-e777f20796fa" name="Changes" comment="Board update">
-      <change afterPath="$PROJECT_DIR$/src/main/java/controller/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/controller/ControlPlayer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/ControlPlayer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/controller/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/controller/PlayerStatus.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/controller/PlayerStatus.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Board.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/model/DeckCards.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/DeckCards.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/model/Bookshelf.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/model/Bookshelf.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -181,6 +176,7 @@
       <workItem from="1679471720159" duration="2533000" />
       <workItem from="1680120955743" duration="2377000" />
       <workItem from="1680184224372" duration="27000" />
+      <workItem from="1680445086057" duration="2501000" />
     </task>
     <task id="LOCAL-00001" summary="Correzione metodi EOGToken">
       <created>1679347133576</created>
@@ -227,38 +223,4 @@
     <MESSAGE value="Board update" />
     <option name="LAST_COMMIT_MESSAGE" value="Board update" />
   </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>
-          <line>282</line>
-          <option name="timeStamp" value="2" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>
-          <line>294</line>
-          <option name="timeStamp" value="3" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-method">
-          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>
-          <line>120</line>
-          <properties class="model.Bookshelf" method="getBookshelf">
-            <option name="EMULATED" value="true" />
-            <option name="WATCH_EXIT" value="false" />
-          </properties>
-          <option name="timeStamp" value="6" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-method">
-          <url>file://$PROJECT_DIR$/src/main/java/model/Bookshelf.java</url>
-          <line>303</line>
-          <properties class="model.Bookshelf" method="getScoreCGC">
-            <option name="EMULATED" value="true" />
-            <option name="WATCH_EXIT" value="false" />
-          </properties>
-          <option name="timeStamp" value="7" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
 </project>
\ No newline at end of file
Index: src/main/java/model/Bookshelf.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\npackage model;\n\nimport java.util.ArrayList;\n\n\npublic class Bookshelf {\n    /**\n     * shelf attribute represent the game bookshelf. Here is implemented with a 6x5 matrix\n     */\n    private Tile[][] shelf;\n\n\n    /**\n     * dimension of the shelf's matrix\n     */\n    private int r= 6; //rows\n    private int c = 5; //columns\n\n    /**\n     * represents the PersonalGoalCard assigned at the beginning of the game\n     */\n    private PersonalGoalCard pgc;\n\n\n    /**\n     * represent all the token that the player can accumulate during the game\n     */\n    private Token tokenCG1;\n    private Token tokenCG2;\n    private int tokenEOG; //it's an integer because it's only meant to assign 1 point\n\n    /**\n     * represents the board used by all the players during the game\n     * every update on the board must be visible to every player and so,  to everyone using a bookshelf\n     * this motivates the choice of the static method for the attribute\n     */\n    private static Board board;\n\n\n    /**\n     *\n     * @param board constructor instantiate the board described above\n     */\n    public Bookshelf(Board board){\n        shelf = new Tile[r][c];\n        for(int i=0;i<r;i++){\n            for(int j=0; j<c;j++){\n                shelf[i][j] = Tile.EMPTY;\n            }\n        }\n        this.board = board;\n        this.pgc = pgc;\n        tokenCG1 = null;\n        tokenCG2 = null;\n        tokenEOG = 0;\n        pgc = board.getDeck().getRandPGC();\n\n    }\n\n\n    //CLASS USED FOR TESTING : IT MUSTN'T BE USED DURING THE GAME\n    public void setPGC(PersonalGoalCard pgc){\n        this.pgc = pgc;\n    }\n\n\n    /**\n     *\n     * @param stream_tiles When the player draw the tiles from the deck they are setted into an array ;\n     *                     The position of the tiles in the array is the order on which the player will insert the card on the column:\n     *                     stream_tiles lenght must be more than 0 and less than 3\n     * @param column The player must specifies which column he wants to put the tiles in\n     *\n     * @return The return statement has been thought for returning feedback codes:\n     *          return 0 --> successfully insertion\n     *          return -1 --> there isn't enough space in the column selected\n     *          return -2 --> array stream tiles doesn't have an acceptable lenght\n     *          return -3 --> columns assigned out-of-bounds\n     *\n     *\n     */\n    public int putTiles(ArrayList<Tile> stream_tiles, int column) throws IndexOutOfBoundsException {\n\n        if(stream_tiles.size() > 3 || stream_tiles.size() <=0) return -2;\n        else{\n\n           try{\n               //controllo a priori che ci sia spazio a sufficienza nelle colonna selezionata\n\n               int count_col = 0;\n\n               for(int i=0; i<r;i++){\n                   if(shelf[i][column] == Tile.EMPTY) count_col++;\n               }\n\n               if(count_col < stream_tiles.size()) return -1; //codice -1 rappresenta una colonna invalida\n\n               int stream_tiles_pointer = 0;\n               for(int i = 0; i<r; i++){\n                   if(shelf[i][column] == Tile.EMPTY && stream_tiles.get(stream_tiles_pointer) != Tile.EMPTY && stream_tiles.get(stream_tiles_pointer) != Tile.NOTAVAILABLE){\n                       shelf[i][column] = stream_tiles.get(stream_tiles_pointer);\n                       stream_tiles_pointer++;\n                       if(stream_tiles_pointer == stream_tiles.size()) i=r; //break\n                   }\n               }\n\n               return 0;\n           }catch (IndexOutOfBoundsException e){\n               System.out.println(e);\n               return -3;\n           }\n           }\n\n    }\n\n\n    /**\n     * Feedback method, it shows the element of the matrix in order to render the whole matrix on the CLI\n     */\n    public void getBookshelf(){\n        for(int i = r-1; i>=0; i--){\n            System.out.println(\"\\n\");\n            for(int j=0;j<c;j++){\n                System.out.println(shelf[i][j]);\n\n            }\n        }\n    }\n\n    /**\n     *\n     * @return this method returns the number of max free spaces for all the columns of the shelf\n     */\n\n    public int maxShelfSpace(){\n        int max=0; int count=0;\n        for(int j=0;j<c;j++){\n            for(int i=5; i>=0;i--){\n                if(shelf[i][j] == Tile.EMPTY) count++;\n                else break;\n            }\n\n            if(max < count) max = count;\n            count = 0;\n        }\n\n        return max;\n\n    }\n\n    /**\n     *\n     * @return sum of all the points accumulated by the player during the game\n     */\n    public int getMyScore(){\n        return getScoreGroups()+ getScorePGC()+getScoreCGC()+getScoreEOG();\n    }\n\n\n    /**\n     * The aim of this method is to calculate the points scored by creating groups of adjacent tiles in the matrix\n     * The data structures used are a list of queues and an additional matrix\n     * The additional matrix is used to track which tiles in the matrix has been already visited during the research of groups\n     * The queue saves all the groups found so it can be easy to count the size of it and so calculate the points dued to it\n     *\n     * Groups are found through a recursive function \"recursive_checker()\" which inspect all the adjacent tiles of the same type\n     *\n     * @return return statement returns the point scored by the creation of all the groups of the matrix\n     */\n    public int getScoreGroups(){\n\n        ArrayList<Coda> groups= new ArrayList<Coda>();\n\n        int points=0;\n\n        boolean[][] shelf_checker = new boolean[r][c];\n\n        //inizializzo la matrice a false\n        for(int i = 0; i<r;i++){\n            for(int j = 0; j<c;j++){\n                shelf_checker[i][j] = false;\n            }\n        }\n\n\n        for(int i=0;i<r;i++){\n            for(int j=0; j<c; j++){\n                if(shelf[i][j] != Tile.EMPTY && shelf_checker[i][j] == false){\n\n\n                    Coda queue = new Coda();\n                    queue.enqueue(new Coordinate(i,j));\n                    shelf_checker[i][j] = true;\n                    recursiveChecker(queue.head(), shelf_checker,queue);\n\n                    groups.add(queue);\n\n\n                }\n            }\n        }\n\n        for(int i=0; i<groups.size(); i++){\n            if(groups.get(i).getCoda().size() == 3) points = points+2;\n            if(groups.get(i).getCoda().size() == 4) points = points+3;\n            if(groups.get(i).getCoda().size() == 5) points = points+5;\n            if(groups.get(i).getCoda().size() >= 6) points = points+8;\n\n        }\n\n        return points;\n    }\n\n    /**\n     * It's a supporting method for getScoreGroup() function.\n     * It can visit adjacent tiles of the same type and add them to the queue, if the tile hasn't been already visited\n     *\n     * @param point point indicates the coordinates of the Tile that I want to start inspecting\n     * @param shelf_checker shelf_checker is the addition boolean matrix which indicates if the tiles has been already visited\n     * @param queue is the structure where the single groups is stored\n     *              then the queue is stores into an array of queues which stores all the groups found\n     */\n\n    private void recursiveChecker(Coordinate point,boolean[][] shelf_checker,Coda queue){\n\n\n        //NORTH\n        if(point.getX()+1 < r)\n            if(shelf[point.getX()][point.getY()] == shelf[point.getX()+1][point.getY()] && shelf_checker[point.getX()+1][point.getY()] == false)\n                if(shelf[point.getX()+1][point.getY()] != Tile.EMPTY){\n                    shelf_checker[point.getX()+1][point.getY()]  = true;\n                    queue.enqueue(new Coordinate(point.getX()+1, point.getY() ));\n                    recursiveChecker(queue.tail(),shelf_checker,queue);\n\n                }\n\n        //SOUTH\n        if(point.getX()-1 >= 0)\n            if(shelf[point.getX()][point.getY()] == shelf[point.getX()-1][point.getY()] && shelf_checker[point.getX()-1][point.getY()] == false)\n                if(shelf[point.getX()-1][point.getY()] != Tile.EMPTY){\n                    shelf_checker[point.getX()-1][point.getY()]  = true;\n                    queue.enqueue(new Coordinate(point.getX()-1, point.getY() ));\n                    recursiveChecker(queue.tail(),shelf_checker,queue);\n\n                }\n\n        //EAST\n        if(point.getY()+1 < c)\n            if(shelf[point.getX()][point.getY()] == shelf[point.getX()][point.getY()+1] && shelf_checker[point.getX()][point.getY()+1] == false)\n                if(shelf[point.getX()][point.getY()+1] != Tile.EMPTY){\n                    shelf_checker[point.getX()][point.getY()+1]  = true;\n                    queue.enqueue(new Coordinate(point.getX(), point.getY()+1));\n                    recursiveChecker(queue.tail(),shelf_checker,queue);\n\n                }\n\n        //WEST\n        if(point.getY()-1 >= 0)\n            if(shelf[point.getX()][point.getY()] == shelf[point.getX()][point.getY()-1] && shelf_checker[point.getX()][point.getY()-1] == false)\n                if(shelf[point.getX()][point.getY()-1] != Tile.EMPTY){\n                    shelf_checker[point.getX()][point.getY()-1]  = true;\n                    queue.enqueue(new Coordinate(point.getX(), point.getY()-1 ));\n                    recursiveChecker(queue.tail(),shelf_checker,queue);\n\n                }\n\n\n\n\n\n\n    }\n\n    /**\n     * assign the tokenCG1 if it has been completed\n     */\n\n\n\n    public void checkCG1(){\n\n        if(board.getCommonGoalCard1().checkGoal(shelf) == true && tokenCG1 == null)\n            tokenCG1 = board.getCommonGoalCard1().getTopStack();\n\n\n    }\n\n    /**\n     * assign the tokenCG2 if it has been completed\n     */\n\n    public void checkCG2(){\n\n        if(board.getCommonGoalCard2().checkGoal(shelf) == true && tokenCG2 == null)\n            tokenCG2 = board.getCommonGoalCard2().getTopStack();\n\n    }\n\n    /**\n     *\n     * @return return the points scored by completing common goal card goals\n     */\n    public int getScoreCGC(){\n        int points = 0;\n        if(tokenCG1 != null) points = points + tokenCG1.getScoreToken();\n        if(tokenCG2 != null) points = points +tokenCG2.getScoreToken();\n\n        return points;\n    }\n\n\n\n    /**\n     *\n     * @return return the point scored by completing personal goal card goal\n     */\n    public int getScorePGC(){\n        return pgc.getScore(shelf);\n\n    }\n\n    /**\n     * It has a double aim:\n     * 1. Indicates if someone has finished it's game (his/her matrix is all filled)\n     * 2. Indicated if the \"owner\" of this bookshelf has finished by filling all the gaps in the matrix\n     * ==> indicates is the game is still running or not\n     * @return true if game is ended, false if game is not ended\n     */\n\n    public boolean checkEOG(){\n\n        if(board.getEOG() == true) return true; //gioco finito\n        else{\n            boolean end = true;\n\n            for(int i=0; i<r;i++)\n                for(int j=0; j<c;j++)\n                    if(shelf[i][j] == Tile.EMPTY) end = false;\n\n            if(end == true){\n                tokenEOG = 1;\n                board.setEOG();\n            }\n\n\n\n            return end;\n        }\n    }\n\n    /**\n     * If the player is the first one finishing to fill the matrix so it has the EOG token it'll assign him 1 extra point\n     */\n\n    public int getScoreEOG(){\n        return tokenEOG;\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/model/Bookshelf.java b/src/main/java/model/Bookshelf.java
--- a/src/main/java/model/Bookshelf.java	(revision b6dc2652cb330269a7abc985478278bab3ec60d9)
+++ b/src/main/java/model/Bookshelf.java	(date 1680464703766)
@@ -14,8 +14,8 @@
     /**
      * dimension of the shelf's matrix
      */
-    private int r= 6; //rows
-    private int c = 5; //columns
+    private final int r= 6; //rows
+    private final int c = 5; //columns
 
     /**
      * represents the PersonalGoalCard assigned at the beginning of the game
